Clang-11 LTO
RISC-V self-test OK
* All benchmark results are measured in 200x2000 samples
         libriscv: function call	median 10ns  		lowest: 10ns     	highest: 27ns
	       lua5.3: function call	median 123ns  		lowest: 118ns     	highest: 157ns

            native: array append	median 0ns  		lowest: 0ns     	highest: 0ns
          libriscv: array append	median 35ns  		lowest: 34ns     	highest: 76ns
     libriscv: array app. direct	median 25ns  		lowest: 25ns     	highest: 30ns
            lua5.3: table append	median 212ns  		lowest: 209ns     	highest: 241ns

        libriscv: many arguments	median 150ns  		lowest: 142ns     	highest: 191ns
          lua5.3: many arguments	median 751ns  		lowest: 729ns     	highest: 889ns

          libriscv: integer math	median 44ns  		lowest: 43ns     	highest: 66ns
            lua5.3: integer math	median 249ns  		lowest: 247ns     	highest: 275ns

         libriscv: syscall print	median 66ns  		lowest: 64ns     	highest: 100ns
           lua5.3: syscall print	median 215ns  		lowest: 213ns     	highest: 314ns

       libriscv: complex syscall	median 779ns  		lowest: 756ns     	highest: 921ns
         lua5.3: complex syscall	median 1417ns  		lowest: 1369ns     	highest: 1485ns

         libriscv: micro threads	median 275ns  		lowest: 270ns     	highest: 313ns
              lua5.3: coroutines	median 713ns  		lowest: 688ns     	highest: 902ns

     libriscv: micro thread args	median 408ns  		lowest: 399ns     	highest: 456ns
          lua5.3: coroutine args	median 767ns  		lowest: 742ns     	highest: 1409ns

		  		libriscv: memcpy	median 5527ns  		lowest: 5405ns     	highest: 6374ns
   		libriscv: memcpy syscall	median 456ns  		lowest: 442ns     	highest: 714ns
				  lua5.3: memcpy	median 7280ns  		lowest: 6933ns     	highest: 8604ns


RISC-V self-test OK
* All benchmark results are measured in 200x2000 samples
       libriscv: function call	median 10ns  		lowest: 10ns     	highest: 25ns
         luajit: function call	median 90ns  		lowest: 90ns     	highest: 134ns

          native: array append	median 0ns  		lowest: 0ns     	highest: 12ns
        libriscv: array append	median 35ns  		lowest: 33ns     	highest: 59ns
   libriscv: array app. direct	median 27ns  		lowest: 27ns     	highest: 44ns
          luajit: table append	median 125ns  		lowest: 124ns     	highest: 162ns

      libriscv: many arguments	median 146ns  		lowest: 142ns     	highest: 206ns
        luajit: many arguments	median 441ns  		lowest: 440ns     	highest: 480ns

        libriscv: integer math	median 42ns  		lowest: 41ns     	highest: 72ns
          luajit: integer math	median 124ns  		lowest: 120ns     	highest: 183ns

       libriscv: syscall print	median 66ns  		lowest: 64ns     	highest: 88ns
         luajit: syscall print	median 168ns  		lowest: 167ns     	highest: 190ns

     libriscv: complex syscall	median 763ns  		lowest: 717ns     	highest: 821ns
       luajit: complex syscall	median 1034ns  		lowest: 1015ns     	highest: 1123ns

       libriscv: micro threads	median 243ns  		lowest: 240ns     	highest: 333ns
            luajit: coroutines	median 373ns  		lowest: 363ns     	highest: 447ns

   libriscv: micro thread args	median 342ns  		lowest: 332ns     	highest: 421ns
        luajit: coroutine args	median 416ns  		lowest: 405ns     	highest: 466ns

              libriscv: memcpy	median 5234ns  		lowest: 5177ns     	highest: 5410ns
       libriscv: memcpy native	median 60ns  		lowest: 59ns     	highest: 107ns
                luajit: memcpy	median 248ns  		lowest: 241ns     	highest: 282ns
