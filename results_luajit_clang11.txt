Clang-11 LTO
RISC-V self-test OK
* All benchmark results are measured in 200x2000 samples
         libriscv: function call	median 10ns  		lowest: 10ns     	highest: 27ns
	       lua5.3: function call	median 123ns  		lowest: 118ns     	highest: 157ns

            native: array append	median 0ns  		lowest: 0ns     	highest: 0ns
          libriscv: array append	median 35ns  		lowest: 34ns     	highest: 76ns
     libriscv: array app. direct	median 25ns  		lowest: 25ns     	highest: 30ns
            lua5.3: table append	median 212ns  		lowest: 209ns     	highest: 241ns

        libriscv: many arguments	median 150ns  		lowest: 142ns     	highest: 191ns
          lua5.3: many arguments	median 751ns  		lowest: 729ns     	highest: 889ns

          libriscv: integer math	median 44ns  		lowest: 43ns     	highest: 66ns
            lua5.3: integer math	median 249ns  		lowest: 247ns     	highest: 275ns

         libriscv: syscall print	median 66ns  		lowest: 64ns     	highest: 100ns
           lua5.3: syscall print	median 215ns  		lowest: 213ns     	highest: 314ns

       libriscv: complex syscall	median 779ns  		lowest: 756ns     	highest: 921ns
         lua5.3: complex syscall	median 1417ns  		lowest: 1369ns     	highest: 1485ns

         libriscv: micro threads	median 275ns  		lowest: 270ns     	highest: 313ns
              lua5.3: coroutines	median 713ns  		lowest: 688ns     	highest: 902ns

     libriscv: micro thread args	median 408ns  		lowest: 399ns     	highest: 456ns
          lua5.3: coroutine args	median 767ns  		lowest: 742ns     	highest: 1409ns

		  		libriscv: memcpy	median 5527ns  		lowest: 5405ns     	highest: 6374ns
   		libriscv: memcpy syscall	median 456ns  		lowest: 442ns     	highest: 714ns
				  lua5.3: memcpy	median 7280ns  		lowest: 6933ns     	highest: 8604ns


RISC-V self-test OK
* All benchmark results are measured in 200x2000 samples
         libriscv: function call	median 4ns  		lowest: 4ns     	highest: 11ns
           luajit: function call	median 92ns  		lowest: 89ns     	highest: 205ns

            native: array append	median 0ns  		lowest: 0ns     	highest: 0ns
          libriscv: array append	median 29ns  		lowest: 27ns     	highest: 65ns
     libriscv: array app. direct	median 20ns  		lowest: 19ns     	highest: 41ns
            luajit: table append	median 126ns  		lowest: 125ns     	highest: 214ns

        libriscv: many arguments	median 132ns  		lowest: 124ns     	highest: 817ns
          luajit: many arguments	median 443ns  		lowest: 443ns     	highest: 707ns

		  libriscv: integer math	median 38ns  		lowest: 37ns     	highest: 63ns
               libriscv: fp math	median 65ns  		lowest: 64ns     	highest: 143ns
              libriscv: exp math	median 101ns  		lowest: 99ns     	highest: 135ns
            luajit: integer math	median 126ns  		lowest: 124ns     	highest: 145ns
                 luajit: fp math	median 141ns  		lowest: 139ns     	highest: 185ns
                luajit: exp math	median 218ns  		lowest: 217ns     	highest: 258ns

	  libriscv: syscall overhead	median 11ns  		lowest: 11ns     	highest: 22ns
         libriscv: syscall print	median 61ns  		lowest: 59ns     	highest: 119ns
		luajit: syscall overhead	median 111ns  		lowest: 109ns     	highest: 140ns
           luajit: syscall print	median 168ns  		lowest: 167ns     	highest: 320ns

       libriscv: complex syscall	median 724ns  		lowest: 692ns     	highest: 809ns
         luajit: complex syscall	median 1034ns  		lowest: 1014ns     	highest: 1228ns

         libriscv: micro threads	median 214ns  		lowest: 212ns     	highest: 283ns
              luajit: coroutines	median 366ns  		lowest: 357ns     	highest: 416ns

     libriscv: micro thread args	median 320ns  		lowest: 306ns     	highest: 374ns
          luajit: coroutine args	median 422ns  		lowest: 419ns     	highest: 496ns

                libriscv: memcpy	median 1057ns  		lowest: 949ns     	highest: 2669ns
         libriscv: memcpy native	median 59ns  		lowest: 58ns     	highest: 96ns
                  luajit: memcpy	median 248ns  		lowest: 246ns     	highest: 315ns
