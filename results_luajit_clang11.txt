Clang-11 LTO
RISC-V self-test OK
* All benchmark results are measured in 200x2000 samples
         libriscv: function call	median 10ns  		lowest: 10ns     	highest: 27ns
	       lua5.3: function call	median 123ns  		lowest: 118ns     	highest: 157ns

            native: array append	median 0ns  		lowest: 0ns     	highest: 0ns
          libriscv: array append	median 35ns  		lowest: 34ns     	highest: 76ns
     libriscv: array app. direct	median 25ns  		lowest: 25ns     	highest: 30ns
            lua5.3: table append	median 212ns  		lowest: 209ns     	highest: 241ns

        libriscv: many arguments	median 150ns  		lowest: 142ns     	highest: 191ns
          lua5.3: many arguments	median 751ns  		lowest: 729ns     	highest: 889ns

          libriscv: integer math	median 44ns  		lowest: 43ns     	highest: 66ns
            lua5.3: integer math	median 249ns  		lowest: 247ns     	highest: 275ns

         libriscv: syscall print	median 66ns  		lowest: 64ns     	highest: 100ns
           lua5.3: syscall print	median 215ns  		lowest: 213ns     	highest: 314ns

       libriscv: complex syscall	median 779ns  		lowest: 756ns     	highest: 921ns
         lua5.3: complex syscall	median 1417ns  		lowest: 1369ns     	highest: 1485ns

         libriscv: micro threads	median 275ns  		lowest: 270ns     	highest: 313ns
              lua5.3: coroutines	median 713ns  		lowest: 688ns     	highest: 902ns

     libriscv: micro thread args	median 408ns  		lowest: 399ns     	highest: 456ns
          lua5.3: coroutine args	median 767ns  		lowest: 742ns     	highest: 1409ns

		  		libriscv: memcpy	median 5527ns  		lowest: 5405ns     	highest: 6374ns
   		libriscv: memcpy syscall	median 456ns  		lowest: 442ns     	highest: 714ns
				  lua5.3: memcpy	median 7280ns  		lowest: 6933ns     	highest: 8604ns


RISC-V self-test OK
* All benchmark results are measured in 200x2000 samples
       libriscv: function call	median 11ns  		lowest: 10ns     	highest: 24ns
         luajit: function call	median 89ns  		lowest: 87ns     	highest: 127ns

          native: array append	median 0ns  		lowest: 0ns     	highest: 0ns
        libriscv: array append	median 36ns  		lowest: 35ns     	highest: 55ns
   libriscv: array app. direct	median 27ns  		lowest: 27ns     	highest: 55ns
          luajit: table append	median 128ns  		lowest: 127ns     	highest: 200ns

      libriscv: many arguments	median 140ns  		lowest: 137ns     	highest: 221ns
        luajit: many arguments	median 451ns  		lowest: 450ns     	highest: 508ns

        libriscv: integer math	median 47ns  		lowest: 44ns     	highest: 49ns
          luajit: integer math	median 127ns  		lowest: 125ns     	highest: 176ns

       libriscv: syscall print	median 73ns  		lowest: 69ns     	highest: 98ns
         luajit: syscall print	median 167ns  		lowest: 167ns     	highest: 225ns

     libriscv: complex syscall	median 794ns  		lowest: 769ns     	highest: 977ns
       luajit: complex syscall	median 1057ns  		lowest: 1030ns     	highest: 1787ns

       libriscv: micro threads	median 243ns  		lowest: 239ns     	highest: 299ns
            luajit: coroutines	median 373ns  		lowest: 362ns     	highest: 765ns

   libriscv: micro thread args	median 417ns  		lowest: 407ns     	highest: 460ns
        luajit: coroutine args	median 428ns  		lowest: 424ns     	highest: 490ns

              libriscv: memcpy	median 6119ns  		lowest: 5954ns     	highest: 6944ns
       libriscv: memcpy native	median 71ns  		lowest: 64ns     	highest: 91ns
                luajit: memcpy	median 251ns  		lowest: 250ns     	highest: 308ns
